
/* 
*数组是特殊的对象
*1. 我们在中括号中设置的是属性值，它的属性名是默认生成的数字：从零开始递增，而且这个数字代表每一项的位置，我们把其称为“索引”＝> 从零开始连续递增，代表每一项位置的数字属性名
* 2.天生默认一个属性名 length，存储数组的长度 */

let ary=[12,ture,'哈哈',13];
console.log(ary);
console.log(ary.length);
console.log(ary['length']);//=>输出数组的长度
console.log(ary[1]);//=>输出哈哈

// 第一项索引为0，最后一项索引 ary.length-1
/* console.log(ary[0]); 
console.log(ary[ary.length-1]);
// 向数组末尾追加内容
ary[ary.length]=100;
console.log(ary);
 */

/* 浏览器想要执行JS代码：
1.从电脑内存中分配出一块内存，用来执行代码（栈内存＝>Stack) 
2. 分配一个主栈程用来自从而下执行JS代码

*/

let a=12;
/*  基本类型：按值操作（直接操作的是值）所以他叫做值类型
1.创建变量a,放到当前栈内存变量存储区域中
2. 创建一个值12，把它存储到当前栈内存值区域中（简单的基本类型值是这样存储的，复杂的引用类型值不是这样做的)
3. 一个等号为赋值，其实赋值是让变量和值相互关联的过程
 */
let b=a;
b=13;
console.log(a);


let n={
    name:'珠峰'
};
/*  引用类型：操作的是堆内存的地址（按引用地.l址操作的）
复杂值（引用类型值）的存储，又分为三个步骤//：
1.从内存中分配出一块新内存，用来存储引用类>L::OOOOOO型值（堆内存=> heap)=> 内存有一个16进制地址
2. 把对象中的健值对（属性名：属性值）依次存储到堆内存当中
3.把堆内存地址和变量关联起来


*/
let m=n;
m.name='培训'
console.log(n.name)